装饰者模式：动态的给一个对象添加一些额外的职责，比生成子类的方法更加灵活，当需要拓展的功能很多，生成很多子类，用这个更灵活


参与对象:
  1.(Component):被装饰对象的基类，定义一个对象接口，可以动态给对象添加职责
  2.(ConcreteComponent):具体被装饰对象，实现Component接口，动态添加新行为
  3.(Decorator):装饰者抽象类，维持一个指向Component实例的引用，并定义一个与Component接口一致的接口
  4.(ConcreteDecorator):具体装饰者，具体的装饰对象，给内部持有的具体被装饰对象，增加具体的职责
